// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parameters and state reactivity > createAsyncComputed > Computed can handle undefined arguments 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can handle undefined arguments 2`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can handle undefined arguments 3`] = `
[
  1,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can return complex objects 1`] = `
[
  {
    "sum": 5,
    "product": 6
  },
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can return complex objects 2`] = `
[
  {
    "sum": 5,
    "product": 6
  },
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take array arguments 1`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take array arguments 2`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take array arguments 3`] = `
[
  15,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take object arguments 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take object arguments 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take object arguments 3`] = `
[
  7,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take state as argument and handle updates 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take state as argument and handle updates 2`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take state as argument and handle updates 3`] = `
[
  4,
  {
    "name": "reactiveFn",
    "get": 6,
    "set": 0,
    "compute": 3,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can take state as argument and handle updates 4`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 10,
    "set": 0,
    "compute": 4,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can use custom memoization function 1`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can use custom memoization function 2`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can use custom memoization function 3`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can use custom memoization function 4`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed can use custom memoization function 5`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed is not recomputed when the same parameters are passed 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed is not recomputed when the same parameters are passed 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed is recomputed when state changes 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed is recomputed when state changes 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 3,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed memoizes based on deep equality of arguments 1`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed memoizes based on deep equality of arguments 2`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed memoizes based on deep equality of arguments 3`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed memoizes based on deep equality of arguments 4`] = `
[
  15,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Computed memoizes based on deep equality of arguments 5`] = `
[
  16,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Parameters can be passed to computed 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createAsyncComputed > Parameters can be passed to computed 2`] = `
[
  4,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can handle undefined arguments 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can handle undefined arguments 2`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can handle undefined arguments 3`] = `
[
  1,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can return complex objects 1`] = `
[
  {
    "sum": 5,
    "product": 6
  },
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can return complex objects 2`] = `
[
  {
    "sum": 5,
    "product": 6
  },
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take array arguments 1`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take array arguments 2`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take array arguments 3`] = `
[
  15,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take object arguments 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take object arguments 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take object arguments 3`] = `
[
  7,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take state as argument and handle updates 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take state as argument and handle updates 2`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take state as argument and handle updates 3`] = `
[
  4,
  {
    "name": "reactiveFn",
    "get": 6,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can take state as argument and handle updates 4`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 10,
    "set": 0,
    "compute": 3,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can use custom memoization function 1`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can use custom memoization function 2`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can use custom memoization function 3`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can use custom memoization function 4`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 0,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed can use custom memoization function 5`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 0,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed is not recomputed when the same parameters are passed 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed is not recomputed when the same parameters are passed 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed is recomputed when state changes 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed is recomputed when state changes 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed memoizes based on deep equality of arguments 1`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed memoizes based on deep equality of arguments 2`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed memoizes based on deep equality of arguments 3`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed memoizes based on deep equality of arguments 4`] = `
[
  15,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Computed memoizes based on deep equality of arguments 5`] = `
[
  16,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Parameters can be passed to computed 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createComputed > Parameters can be passed to computed 2`] = `
[
  4,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 1,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can handle undefined arguments 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can handle undefined arguments 2`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can handle undefined arguments 3`] = `
[
  1,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can return complex objects 1`] = `
[
  {
    "sum": 5,
    "product": 6
  },
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can return complex objects 2`] = `
[
  {
    "sum": 5,
    "product": 6
  },
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take array arguments 1`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take array arguments 2`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take array arguments 3`] = `
[
  15,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take object arguments 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take object arguments 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take object arguments 3`] = `
[
  7,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take state as argument and handle updates 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take state as argument and handle updates 2`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take state as argument and handle updates 3`] = `
[
  4,
  {
    "name": "reactiveFn",
    "get": 6,
    "set": 0,
    "compute": 3,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can take state as argument and handle updates 4`] = `
[
  6,
  {
    "name": "reactiveFn",
    "get": 10,
    "set": 0,
    "compute": 4,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can use custom memoization function 1`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can use custom memoization function 2`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can use custom memoization function 3`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can use custom memoization function 4`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 0,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed can use custom memoization function 5`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 0,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed is not recomputed when the same parameters are passed 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed is not recomputed when the same parameters are passed 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed is recomputed when state changes 1`] = `
[
  2,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed is recomputed when state changes 2`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 3,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed memoizes based on deep equality of arguments 1`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 3,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed memoizes based on deep equality of arguments 2`] = `
[
  13,
  {
    "name": "reactiveFn",
    "get": 4,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed memoizes based on deep equality of arguments 3`] = `
[
  14,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed memoizes based on deep equality of arguments 4`] = `
[
  15,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Computed memoizes based on deep equality of arguments 5`] = `
[
  16,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Parameters can be passed to computed 1`] = `
[
  3,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;

exports[`parameters and state reactivity > createRelay > Parameters can be passed to computed 2`] = `
[
  4,
  {
    "name": "reactiveFn",
    "get": 2,
    "set": 0,
    "compute": 2,
    "resolve": 0,
    "subscribe": 0,
    "update": 0,
    "unsubscribe": 0,
    "internalGet": 0,
    "internalSet": 0,
    "error": 0,
    "effect": 0
  }
]
`;
